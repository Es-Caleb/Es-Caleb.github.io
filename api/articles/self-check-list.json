{"title":"一名【合格】前端工程师的自检清单【自检ing】","uid":"a9932dfc783681953ee77924badfcfab","slug":"self-check-list","date":"2023-02-14T02:15:00.000Z","updated":"2023-02-20T08:11:13.246Z","comments":true,"path":"api/articles/self-check-list.json","keywords":null,"cover":[],"content":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>感谢原作者提供这样一份优秀的自检清单，写这篇的文章的主要目的是按照清单上的知识检测自己还有哪些不足和提升，同时建立自己的知识体系<br>原文章地址: <a href=\"https://juejin.cn/post/6844903830887366670\">一名【合格】前端工程师的自检清单</a></p>\n<p><img src=\"https://gitee.com/CalebChen/pic-img/raw/master/blog-img/posts/Knowledge%20System.jpg\" alt=\"Knowledge System.jpg\"></p>\n<h2 id=\"一、JavaScript基础\"><a href=\"#一、JavaScript基础\" class=\"headerlink\" title=\"一、JavaScript基础\"></a>一、JavaScript基础</h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>前端工程师吃饭的家伙，深度、广度一样都不能差。</p></blockquote>\n<h3 id=\"变量和类型\"><a href=\"#变量和类型\" class=\"headerlink\" title=\"变量和类型\"></a>变量和类型</h3><ul>\n<li><p>1.<a href=\"https://kaleb.top/post/js-specThe-langType\"><code>JavaScript</code>规定了几种语言类型</a></p>\n</li>\n<li><p>2.<a href=\"https://kaleb.top/post/js-data-structure\"><code>JavaScript</code>对象的底层数据结构是什么</a></p>\n</li>\n<li><p>3.<a href=\"https://kaleb.top/post/symbol-devAndapp\"><code>Symbol</code>类型在实际开发中的应用、可手动实现一个简单的<code>Symbol</code></a></p>\n</li>\n<li><p>4.<a href=\"https://kaleb.top/post/js-storageForm\"><code>JavaScript</code>中的变量在内存中的具体存储形式</a></p>\n</li>\n<li><p>5.<a href=\"https://kaleb.top/post/built-object\">基本类型对应的内置对象，以及他们之间的装箱拆箱操作</a></p>\n</li>\n<li><p>6.理解值类型和引用类型</p>\n</li>\n<li><p>7.<a href=\"https://kaleb.top/post/null-undefined-diff\"><code>null</code>和<code>undefined</code>的区别</a></p>\n</li>\n<li><p>8.<a href=\"https://kaleb.top/post/judgment-type-method\">至少可以说出三种判断<code>JavaScript</code>数据类型的方式，以及他们的优缺点，如何准确的判断数组类型</a></p>\n</li>\n<li><p>9.<a href=\"https://kaleb.top/post/implicit-type\">可能发生隐式类型转换的场景以及转换原则，应如何避免或巧妙应用</a></p>\n</li>\n<li><p>10.<a href=\"https://kaleb.top/post/loss-of-precision\">出现小数精度丢失的原因，<code>JavaScript</code>可以存储的最大数字、最大安全数字，<code>JavaScript</code>处理大数字的方法、避免精度丢失的方法</a></p>\n<h3 id=\"原型和原型链\"><a href=\"#原型和原型链\" class=\"headerlink\" title=\"原型和原型链\"></a>原型和原型链</h3></li>\n<li><p>1.<a href=\"https://kaleb.top/post/prototype-rules\">理解原型设计模式以及<code>JavaScript</code>中的原型规则</a></p>\n</li>\n<li><p>2.<code>instanceof</code>的底层实现原理，手动实现一个<code>instanceof</code></p>\n</li>\n<li><p>4.实现继承的几种方式以及他们的优缺点</p>\n</li>\n<li><p>5.至少说出一种开源项目(如<code>Node</code>)中应用原型继承的案例</p>\n</li>\n<li><p>6.可以描述<code>new</code>一个对象的详细过程，手动实现一个<code>new</code>操作符</p>\n</li>\n<li><p>7.理解<code>es6 class</code>构造以及继承的底层实现原理</p>\n<h3 id=\"作用域和闭包\"><a href=\"#作用域和闭包\" class=\"headerlink\" title=\"作用域和闭包\"></a>作用域和闭包</h3></li>\n<li><p>1.理解词法作用域和动态作用域</p>\n</li>\n<li><p>2.理解<code>JavaScript</code>的作用域和作用域链</p>\n</li>\n<li><p>3.理解<code>JavaScript</code>的执行上下文栈，可以应用堆栈信息快速定位问题</p>\n</li>\n<li><p>4.<code>this</code>的原理以及几种不同使用场景的取值</p>\n</li>\n<li><p>5.闭包的实现原理和作用，可以列举几个开发中闭包的实际应用</p>\n</li>\n<li><p>6.理解堆栈溢出和内存泄漏的原理，如何防止</p>\n</li>\n<li><p>7.如何处理循环的异步操作</p>\n</li>\n<li><p>8.理解模块化解决的实际问题，可列举几个模块化方案并理解其中原理</p>\n<h3 id=\"执行机制\"><a href=\"#执行机制\" class=\"headerlink\" title=\"执行机制\"></a>执行机制</h3></li>\n<li><p>1.为何<code>try</code>里面放<code>return</code>，<code>finally</code>还会执行，理解其内部机制</p>\n</li>\n<li><p>2.<code>JavaScript</code>如何实现异步编程，可以详细描述<code>EventLoop</code>机制</p>\n</li>\n<li><p>3.宏任务和微任务分别有哪些</p>\n</li>\n<li><p>4.可以快速分析一个复杂的异步嵌套逻辑，并掌握分析方法</p>\n</li>\n<li><p>5.使用<code>Promise</code>实现串行</p>\n</li>\n<li><p>6.<code>Node</code>与浏览器<code>EventLoop</code>的差异</p>\n</li>\n<li><p>7.如何在保证页面运行流畅的情况下处理海量数据</p>\n<h3 id=\"语法和API\"><a href=\"#语法和API\" class=\"headerlink\" title=\"语法和API\"></a>语法和API</h3></li>\n<li><p>1.理解<code>ECMAScript</code>和<code>JavaScript</code>的关系</p>\n</li>\n<li><p>2.熟练运用<code>es5</code>、<code>es6</code>提供的语法规范，</p>\n</li>\n<li><p>3.熟练掌握<code>JavaScript</code>提供的全局对象（例如<code>Date</code>、<code>Math</code>）、全局函数（例如<code>decodeURI</code>、<code>isNaN</code>）、全局属性（例如<code>Infinity</code>、<code>undefined</code>）</p>\n</li>\n<li><p>4.熟练应用<code>map</code>、<code>reduce</code>、<code>filter</code> 等高阶函数解决问题</p>\n</li>\n<li><p>5.<code>setInterval</code>需要注意的点，使用<code>settimeout</code>实现<code>setInterval</code></p>\n</li>\n<li><p>6.<code>JavaScript</code>提供的正则表达式<code>API</code>、可以使用正则表达式（邮箱校验、<code>URL</code>解析、去重等）解决常见问题</p>\n</li>\n<li><p>7.<code>JavaScript</code>异常处理的方式，统一的异常处理方案</p>\n<h2 id=\"二、HTML和CSS\"><a href=\"#二、HTML和CSS\" class=\"headerlink\" title=\"二、HTML和CSS\"></a>二、HTML和CSS</h2><h3 id=\"HTML\"><a href=\"#HTML\" class=\"headerlink\" title=\"HTML\"></a>HTML</h3></li>\n<li><p>1.从规范的角度理解<code>HTML</code>，从分类和语义的角度使用标签</p>\n</li>\n<li><p>2.常用页面标签的默认样式、自带属性、不同浏览器的差异、处理浏览器兼容问题的方式</p>\n</li>\n<li><p>3.元信息类标签(<code>head</code>、<code>title</code>、<code>meta</code>)的使用目的和配置方法</p>\n</li>\n<li><p>4.<code>HTML5</code>离线缓存原理</p>\n</li>\n<li><p>5.可以使用<code>Canvas API</code>、<code>SVG</code>等绘制高性能的动画</p>\n<h3 id=\"CSS\"><a href=\"#CSS\" class=\"headerlink\" title=\"CSS\"></a>CSS</h3></li>\n<li><p>1.<code>CSS</code>盒模型，在不同浏览器的差异</p>\n</li>\n<li><p>2.<code>CSS</code>所有选择器及其优先级、使用场景，哪些可以继承，如何运用<code>at</code>规则</p>\n</li>\n<li><p>3.<code>CSS</code>伪类和伪元素有哪些，它们的区别和实际应用</p>\n</li>\n<li><p>4.<code>HTML</code>文档流的排版规则，<code>CSS</code>几种定位的规则、定位参照物、对文档流的影响，如何选择最好的定位方式，雪碧图实现原理</p>\n</li>\n<li><p>5.水平垂直居中的方案、可以实现<code>6</code>种以上并对比它们的优缺点</p>\n</li>\n<li><p>6.<code>BFC</code>实现原理，可以解决的问题，如何创建<code>BFC</code></p>\n</li>\n<li><p>7.可使用<code>CSS</code>函数复用代码，实现特殊效果</p>\n</li>\n<li><p>8.<code>PostCSS</code>、<code>Sass</code>、<code>Less</code>的异同，以及使用配置，至少掌握一种</p>\n</li>\n<li><p>9.<code>CSS</code>模块化方案、如何配置按需加载、如何防止<code>CSS</code>阻塞渲染</p>\n</li>\n<li><p>10.熟练使用<code>CSS</code>实现常见动画，如渐变、移动、旋转、缩放等等</p>\n</li>\n<li><p>11.<code>CSS</code>浏览器兼容性写法，了解不同<code>API</code>在不同浏览器下的兼容性情况</p>\n</li>\n<li><p>12.掌握一套完整的响应式布局方案</p>\n<h3 id=\"手写\"><a href=\"#手写\" class=\"headerlink\" title=\"手写\"></a>手写</h3></li>\n<li><p>1.手写图片瀑布流效果</p>\n</li>\n<li><p>2.使用<code>CSS</code>绘制几何图形（圆形、三角形、扇形、菱形等）</p>\n</li>\n<li><p>3.使用纯<code>CSS</code>实现曲线运动（贝塞尔曲线）</p>\n</li>\n<li><p>4.实现常用布局（三栏、圣杯、双飞翼、吸顶），可是说出多种方式并理解其优缺点</p>\n<h2 id=\"三、计算机基础\"><a href=\"#三、计算机基础\" class=\"headerlink\" title=\"三、计算机基础\"></a>三、计算机基础</h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>关于编译原理，不需要理解非常深入，但是最基本的原理和概念一定要懂，这对于学习一门编程语言非常重要</p></blockquote>\n<h3 id=\"编译原理\"><a href=\"#编译原理\" class=\"headerlink\" title=\"编译原理\"></a>编译原理</h3></li>\n<li><p>1.理解代码到底是什么，计算机如何将代码转换为可以运行的目标程序</p>\n</li>\n<li><p>2.正则表达式的匹配原理和性能优化</p>\n</li>\n<li><p>3.如何将<code>JavaScript</code>代码解析成抽象语法树(<code>AST</code>)</p>\n</li>\n<li><p>4.<code>base64</code>的编码原理</p>\n</li>\n<li><p>5.几种进制的相互转换计算方法，在<code>JavaScript</code>中如何表示和转换</p>\n<h3 id=\"网络协议\"><a href=\"#网络协议\" class=\"headerlink\" title=\"网络协议\"></a>网络协议</h3></li>\n<li><p>1.理解什么是协议，了解<code>TCP/IP</code>网络协议族的构成，每层协议在应用程序中发挥的作用</p>\n</li>\n<li><p>2.三次握手和四次挥手详细原理，为什么要使用这种机制</p>\n</li>\n<li><p>3.有哪些协议是可靠，<code>TCP</code>有哪些手段保证可靠交付</p>\n</li>\n<li><p>4.<code>DNS</code>的作用、<code>DNS</code>解析的详细过程，<code>DNS</code>优化原理</p>\n</li>\n<li><p>5.<code>CDN</code>的作用和原理</p>\n</li>\n<li><p>6.<code>HTTP</code>请求报文和响应报文的具体组成，能理解常见请求头的含义，有几种请求方式，区别是什么</p>\n</li>\n<li><p>7.<code>HTTP</code>所有状态码的具体含义，看到异常状态码能快速定位问题</p>\n</li>\n<li><p>8.<code>HTTP1.1</code>、<code>HTTP2.0</code>带来的改变</p>\n</li>\n<li><p>9.<code>HTTPS</code>的加密原理，如何开启<code>HTTPS</code>，如何劫持<code>HTTPS</code>请求</p>\n</li>\n<li><p>10.理解<code>WebSocket</code>协议的底层原理、与<code>HTTP</code>的区别</p>\n<h3 id=\"设计模式\"><a href=\"#设计模式\" class=\"headerlink\" title=\"设计模式\"></a>设计模式</h3></li>\n<li><p>1.熟练使用前端常用的设计模式编写代码，如单例模式、装饰器模式、代理模式等</p>\n</li>\n<li><p>2.发布订阅模式和观察者模式的异同以及实际应用</p>\n</li>\n<li><p>3.可以说出几种设计模式在开发中的实际应用，理解框架源码中对设计模式的应用</p>\n<h2 id=\"四、数据结构和算法\"><a href=\"#四、数据结构和算法\" class=\"headerlink\" title=\"四、数据结构和算法\"></a>四、数据结构和算法</h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>据我了解的大部分前端对这部分知识有些欠缺，甚至抵触，但是，如果突破更高的天花板，这部分知识是必不可少的，而且我亲身经历——非常有用！</p></blockquote>\n<h3 id=\"JavaScript编码能力\"><a href=\"#JavaScript编码能力\" class=\"headerlink\" title=\"JavaScript编码能力\"></a>JavaScript编码能力</h3></li>\n<li><p>1.种方式实现数组去重、扁平化、对比优缺点</p>\n</li>\n<li><p>2.多种方式实现深拷贝、对比优缺点</p>\n</li>\n<li><p>3.手写函数柯里化工具函数、并理解其应用场景和优势</p>\n</li>\n<li><p>4.手写防抖和节流工具函数、并理解其内部原理和应用场景</p>\n</li>\n<li><p>5.实现一个<code>sleep</code>函数</p>\n<h3 id=\"手动实现前端轮子\"><a href=\"#手动实现前端轮子\" class=\"headerlink\" title=\"手动实现前端轮子\"></a>手动实现前端轮子</h3></li>\n<li><p>1.手动实现<code>call、apply、bind</code></p>\n</li>\n<li><p>2.手动实现符合<code>Promise/A+</code>规范的<code>Promise</code>、手动实现<code>async await</code></p>\n</li>\n<li><p>3.手写一个<code>EventEmitter</code>实现事件发布、订阅</p>\n</li>\n<li><p>4.可以说出两种实现双向绑定的方案、可以手动实现</p>\n</li>\n<li><p>5.手写<code>JSON.stringify</code>、<code>JSON.parse</code></p>\n</li>\n<li><p>6.手写一个模版引擎，并能解释其中原理</p>\n</li>\n<li><p>7.手写<code>懒加载</code>、<code>下拉刷新</code>、<code>上拉加载</code>、<code>预加载</code>等效果</p>\n<h3 id=\"数据结构\"><a href=\"#数据结构\" class=\"headerlink\" title=\"数据结构\"></a>数据结构</h3></li>\n<li><p>1.理解常见数据结构的特点，以及他们在不同场景下使用的优缺点</p>\n</li>\n<li><p>2.理解<code>数组</code>、<code>字符串</code>的存储原理，并熟练应用他们解决问题</p>\n</li>\n<li><p>3.理解<code>二叉树</code>、<code>栈</code>、<code>队列</code>、<code>哈希表</code>的基本结构和特点，并可以应用它解决问题</p>\n</li>\n<li><p>4.了解<code>图</code>、<code>堆</code>的基本结构和使用场景</p>\n<h3 id=\"算法\"><a href=\"#算法\" class=\"headerlink\" title=\"算法\"></a>算法</h3></li>\n<li><p>1.可计算一个算法的时间复杂度和空间复杂度，可估计业务逻辑代码的耗时和内存消耗</p>\n</li>\n<li><p>2.至少理解五种排序算法的实现原理、应用场景、优缺点，可快速说出时间、空间复杂度</p>\n</li>\n<li><p>3.了解递归和循环的优缺点、应用场景、并可在开发中熟练应用</p>\n</li>\n<li><p>4.可应用<code>回溯算法</code>、<code>贪心算法</code>、<code>分治算法</code>、<code>动态规划</code>等解决复杂问题</p>\n</li>\n<li><p>5.前端处理海量数据的算法方案</p>\n<h2 id=\"五、运行环境\"><a href=\"#五、运行环境\" class=\"headerlink\" title=\"五、运行环境\"></a>五、运行环境</h2><p>我们需要理清语言和环境的关系：</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><code>ECMAScript</code>描述了<code>JavaScript</code>语言的语法和基本对象规范<br>浏览器作为<code>JavaScript</code>的一种运行环境，为它提供了：文档对象模型（<code>DOM</code>），描述处理网页内容的方法和接口、浏览器对象模型（<code>BOM</code>），描述与浏览器进行交互的方法和接口<br>Node也是<code>JavaScript</code>的一种运行环境，为它提供了操作<code>I/O</code>、网络等<code>API</code></p></blockquote>\n<h3 id=\"浏览器API\"><a href=\"#浏览器API\" class=\"headerlink\" title=\"浏览器API\"></a>浏览器API</h3></li>\n<li><p>1.浏览器提供的符合<code>W3C</code>标准的<code>DOM</code>操作<code>API</code>、浏览器差异、兼容性</p>\n</li>\n<li><p>2.浏览器提供的浏览器对象模型 (<code>BOM</code>)提供的所有全局<code>API</code>、浏览器差异、兼容性</p>\n</li>\n<li><p>3.大量<code>DOM</code>操作、海量数据的性能优化(合并操作、<code>Diff</code>、<code>requestAnimationFrame</code>等)</p>\n</li>\n<li><p>4.浏览器海量数据存储、操作性能优化</p>\n</li>\n<li><p>5.<code>DOM</code>事件流的具体实现机制、不同浏览器的差异、事件代理</p>\n</li>\n<li><p>6.前端发起网络请求的几种方式及其底层实现、可以手写原生<code>ajax</code>、<code>fetch</code>、可以熟练使用第三方库</p>\n</li>\n<li><p>7.浏览器的同源策略，如何避免同源策略，几种方式的异同点以及如何选型</p>\n</li>\n<li><p>8.浏览器提供的几种存储机制、优缺点、开发中正确的选择</p>\n</li>\n<li><p>9.浏览器跨标签通信</p>\n<h3 id=\"浏览器原理\"><a href=\"#浏览器原理\" class=\"headerlink\" title=\"浏览器原理\"></a>浏览器原理</h3></li>\n<li><p>1.各浏览器使用的<code>JavaScript</code>引擎以及它们的异同点、如何在代码中进行区分</p>\n</li>\n<li><p>2.请求数据到请求结束与服务器进行了几次交互</p>\n</li>\n<li><p>3.可详细描述浏览器从输入<code>URL</code>到页面展现的详细过程</p>\n</li>\n<li><p>4.浏览器解析<code>HTML</code>代码的原理，以及构建<code>DOM</code>树的流程</p>\n</li>\n<li><p>5.浏览器如何解析<code>CSS</code>规则，并将其应用到<code>DOM</code>树上</p>\n</li>\n<li><p>6.浏览器如何将解析好的带有样式的<code>DOM</code>树进行绘</p>\n</li>\n<li><p>7.浏览器的运行机制，如何配置资源异步同步加载</p>\n</li>\n<li><p>8.浏览器回流与重绘的底层原理，引发原因，如何有效避免</p>\n</li>\n<li><p>9.浏览器的垃圾回收机制，如何避免内存泄漏</p>\n</li>\n<li><p>10.浏览器采用的缓存方案，如何选择和控制合适的缓存方案</p>\n<h3 id=\"Node\"><a href=\"#Node\" class=\"headerlink\" title=\"Node\"></a>Node</h3></li>\n<li><p>1.理解<code>Node</code>在应用程序中的作用，可以使用<code>Node</code>搭建前端运行环境、使用<code>Node</code>操作文件、操作数据库等等</p>\n</li>\n<li><p>2.掌握一种<code>Node</code>开发框架，如<code>Express</code>，<code>Express</code>和<code>Koa</code>的区别</p>\n</li>\n<li><p>3.熟练使用<code>Node</code>提供的<code>API</code>如<code>Path</code>、<code>Http</code>、<code>Child Process</code>等并理解其实现原理</p>\n</li>\n<li><p>4.<code>Node</code>的底层运行原理、和浏览器的异同</p>\n</li>\n<li><p>5.<code>Node</code>事件驱动、非阻塞机制的实现原理</p>\n<h2 id=\"六、框架和类库\"><a href=\"#六、框架和类库\" class=\"headerlink\" title=\"六、框架和类库\"></a>六、框架和类库</h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>轮子层出不穷，从原理上理解才是正道</p></blockquote>\n<h3 id=\"TypeScript\"><a href=\"#TypeScript\" class=\"headerlink\" title=\"TypeScript\"></a>TypeScript</h3></li>\n<li><p>1.理解<code>泛型</code>、<code>接口</code>等面向对象的相关概念，<code>TypeScript</code>对面向对象理念的实现</p>\n</li>\n<li><p>2.理解使用<code>TypeScript</code>的好处，掌握<code>TypeScript</code>基础语法</p>\n</li>\n<li><p>3.<code>TypeScript</code>的规则检测原理</p>\n</li>\n<li><p>4.可以在<code>React</code>、<code>Vue</code>等框架中使用<code>TypeScript</code>进行开发</p>\n<h3 id=\"React\"><a href=\"#React\" class=\"headerlink\" title=\"React\"></a>React</h3></li>\n<li><p>1.<code>React</code>和<code>vue </code>选型和优缺点、核心架构的区别</p>\n</li>\n<li><p>2.<code>React</code>中<code>setState</code>的执行机制，如何有效的管理状态</p>\n</li>\n<li><p>3.<code>React</code>的事件底层实现机制</p>\n</li>\n<li><p>4.<code>React</code>的虚拟<code>DOM</code>和<code>Diff</code>算法的内部实现</p>\n</li>\n<li><p>5.<code>React</code>的<code>Fiber</code>工作原理，解决了什么问题</p>\n</li>\n<li><p>6.<code>React Router</code>和<code>Vue Router</code>的底层实现原理、动态加载实现原理</p>\n</li>\n<li><p>7.可熟练应用<code>React API</code>、生命周期等，可应用<code>HOC</code>、<code>render props</code>、<code>Hooks</code>等高阶用法解决问题</p>\n</li>\n<li><p>8.基于<code>React</code>的特性和原理，可以手动实现一个简单的<code>React</code></p>\n<h3 id=\"Vue\"><a href=\"#Vue\" class=\"headerlink\" title=\"Vue\"></a>Vue</h3></li>\n<li><p>1.熟练使用<code>Vue</code>的<code>API</code>、生命周期、钩子函数</p>\n</li>\n<li><p>2.<code>MVVM</code>框架设计理念</p>\n</li>\n<li><p>3.<code>Vue</code>双向绑定实现原理、<code>Diff</code>算法的内部实现</p>\n</li>\n<li><p>4.<code>Vue</code>的事件机制</p>\n</li>\n<li><p>5.从<code>template</code>转换成真实<code>DOM</code>的实现机制</p>\n<h3 id=\"多端开发\"><a href=\"#多端开发\" class=\"headerlink\" title=\"多端开发\"></a>多端开发</h3></li>\n<li><p>1.单页面应用（<code>SPA</code>）的原理和优缺点，掌握一种快速开发<code>SPA</code>的方案</p>\n</li>\n<li><p>2.理解<code>Viewport</code>、<code>em</code>、<code>rem</code>的原理和用法，分辨率、<code>px</code>、<code>ppi</code>、<code>dpi</code>、<code>dp</code>的区别和实际应用</p>\n</li>\n<li><p>3.移动端页面适配解决方案、不同机型适配方案</p>\n</li>\n<li><p>4.掌握一种<code>JavaScript</code>移动客户端开发技术，如<code>React Native</code>：可以搭建<code>React Native</code>开发环境，熟练进行开发，可理解<code>React Native</code>的运作原理，不同端适配</p>\n</li>\n<li><p>5.掌握一种<code>JavaScript</code> <code>PC</code>客户端开发技术，如<code>Electron</code>：可搭建<code>Electron</code>开发环境，熟练进行开发，可理解<code>Electron</code>的运作原理</p>\n</li>\n<li><p>6.掌握一种小程序开发框架或原生小程序开发</p>\n</li>\n<li><p>7.理解多端框架的内部实现原理，至少了解一个多端框架的使用</p>\n<h3 id=\"数据流管理\"><a href=\"#数据流管理\" class=\"headerlink\" title=\"数据流管理\"></a>数据流管理</h3></li>\n<li><p>1.掌握<code>React</code>和<code>Vue</code>传统的跨组件通信方案，对比采用数据流管理框架的异同</p>\n</li>\n<li><p>2.熟练使用<code>Redux</code>管理数据流，并理解其实现原理，中间件实现原理</p>\n</li>\n<li><p>3.熟练使用<code>Mobx</code>管理数据流，并理解其实现原理，相比<code>Redux</code>有什么优势</p>\n</li>\n<li><p>4.熟练使用<code>Vuex</code>管理数据流，并理解其实现原理</p>\n</li>\n<li><p>5.以上数据流方案的异同和优缺点，不情况下的技术选型</p>\n<h3 id=\"实用库\"><a href=\"#实用库\" class=\"headerlink\" title=\"实用库\"></a>实用库</h3></li>\n<li><p>1.至少掌握一种<code>UI</code>组件框架，如<code>antd design</code>，理解其设计理念、底层实现</p>\n</li>\n<li><p>2.掌握一种图表绘制框架，如<code>Echart</code>，理解其设计理念、底层实现，可以自己实现图表</p>\n</li>\n<li><p>3.掌握一种<code>GIS</code>开发框架，如百度地图<code>API</code></p>\n</li>\n<li><p>4.掌握一种可视化开发框架，如<code>Three.js</code>、<code>D3</code></p>\n</li>\n<li><p>5.工具函数库，如<code>lodash</code>、<code>underscore</code>、<code>moment</code>等，理解使用的工具类或工具函数的具体实现原理</p>\n<h3 id=\"开发和调试\"><a href=\"#开发和调试\" class=\"headerlink\" title=\"开发和调试\"></a>开发和调试</h3></li>\n<li><p>1.熟练使用各浏览器提供的调试工具</p>\n</li>\n<li><p>2.熟练使用一种代理工具实现请求代理、抓包，如<code>charls</code></p>\n</li>\n<li><p>3.可以使用<code>Android</code>、<code>IOS</code>模拟器进行调试，并掌握一种真机调试方案</p>\n</li>\n<li><p>4.了解<code>Vue</code>、<code>React</code>等框架调试工具的使用</p>\n<h2 id=\"七、前端工程\"><a href=\"#七、前端工程\" class=\"headerlink\" title=\"七、前端工程\"></a>七、前端工程</h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>前端工程化：以工程化方法和工具提高开发生产效率、降低维护难度</p></blockquote>\n<h3 id=\"项目构建\"><a href=\"#项目构建\" class=\"headerlink\" title=\"项目构建\"></a>项目构建</h3></li>\n<li><p>1.理解<code>npm</code>、<code>yarn</code>依赖包管理的原理，两者的区别</p>\n</li>\n<li><p>2.可以使用<code>npm</code>运行自定义脚本</p>\n</li>\n<li><p>3.理解<code>Babel</code>、<code>ESLint</code>、<code>webpack</code>等工具在项目中承担的作用</p>\n</li>\n<li><p>4.<code>ESLint</code>规则检测原理，常用的<code>ESLint</code>配置</p>\n</li>\n<li><p>5.<code>Babel</code>的核心原理，可以自己编写一个<code>Babel</code>插件</p>\n</li>\n<li><p>6.可以配置一种前端代码兼容方案，如<code>Polyfill</code></p>\n</li>\n<li><p>7.<code>Webpack</code>的编译原理、构建流程、热更新原理，<code>chunk</code>、<code>bundle</code>和<code>module</code>的区别和应用</p>\n</li>\n<li><p>8.可熟练配置已有的<code>loaders</code>和<code>plugins</code>解决问题，可以自己编写<code>loaders</code>和<code>plugins</code></p>\n<h3 id=\"nginx\"><a href=\"#nginx\" class=\"headerlink\" title=\"nginx\"></a>nginx</h3></li>\n<li><p>1.正向代理与反向代理的特点和实例</p>\n</li>\n<li><p>2.可手动搭建一个简单的<code>nginx</code>服务器、</p>\n</li>\n<li><p>3.熟练应用常用的<code>nginx</code>内置变量，掌握常用的匹配规则写法</p>\n</li>\n<li><p>4.可以用<code>nginx</code>实现请求过滤、配置<code>gzip</code>、负载均衡等，并能解释其内部原理</p>\n<h3 id=\"开发提速\"><a href=\"#开发提速\" class=\"headerlink\" title=\"开发提速\"></a>开发提速</h3></li>\n<li><p>1.熟练掌握一种接口管理、接口<code>mock</code>工具的使用，如<code>yapi</code></p>\n</li>\n<li><p>2.掌握一种高效的日志埋点方案，可快速使用日志查询工具定位线上问题</p>\n</li>\n<li><p>3.理解<code>TDD</code>与<code>BDD</code>模式，至少会使用一种前端单元测试框架</p>\n<h3 id=\"版本控制\"><a href=\"#版本控制\" class=\"headerlink\" title=\"版本控制\"></a>版本控制</h3></li>\n<li><p>1.理解<code>Git</code>的核心原理、工作流程、和<code>SVN</code>的区别</p>\n</li>\n<li><p>2.熟练使用常规的<code>Git</code>命令、<code>git rebase</code>、<code>git stash</code>等进阶命令</p>\n</li>\n<li><p>3.可以快速解决<code>线上分支回滚</code>、<code>线上分支错误合并</code>等复杂问题</p>\n<h3 id=\"持续集成\"><a href=\"#持续集成\" class=\"headerlink\" title=\"持续集成\"></a>持续集成</h3></li>\n<li><p>1.理解<code>CI/CD</code>技术的意义，至少熟练掌握一种<code>CI/CD</code>工具的使用，如<code>Jenkins</code></p>\n</li>\n<li><p>2.可以独自完成架构设计、技术选型、环境搭建、全流程开发、部署上线等一套完整的开发流程（包括<code>Web</code>应用、移动客户端应用、<code>PC</code>客户端应用、小程序、<code>H5</code>等等）</p>\n<h2 id=\"八、项目和业务\"><a href=\"#八、项目和业务\" class=\"headerlink\" title=\"八、项目和业务\"></a>八、项目和业务</h2><h3 id=\"后端技能\"><a href=\"#后端技能\" class=\"headerlink\" title=\"后端技能\"></a>后端技能</h3></li>\n<li><p>1.了解后端的开发方式，在应用程序中的作用，至少会使用一种后端语言</p>\n</li>\n<li><p>2.掌握数据最终在数据库中是如何落地存储的，能看懂表结构设计、表之间的关联，至少会使用一种数据库</p>\n<h3 id=\"性能优化\"><a href=\"#性能优化\" class=\"headerlink\" title=\"性能优化\"></a>性能优化</h3></li>\n<li><p>1.了解前端性能衡量指标、性能监控要点，掌握一种前端性能监控方案</p>\n</li>\n<li><p>2.了解常见的<code>Web</code>、<code>App</code>性能优化方案</p>\n</li>\n<li><p>3.<code>SEO</code>排名规则、<code>SEO</code>优化方案、前后端分离的<code>SEO</code></p>\n</li>\n<li><p>4.<code>SSR</code>实现方案、优缺点、及其性能优化</p>\n</li>\n<li><p>5.<code>Webpack</code>的性能优化方案</p>\n</li>\n<li><p>6.<code>Canvas</code>性能优化方案</p>\n</li>\n<li><p>7.<code>React</code>、<code>Vue</code>等框架使用性能优化方案</p>\n<h3 id=\"前端安全\"><a href=\"#前端安全\" class=\"headerlink\" title=\"前端安全\"></a>前端安全</h3></li>\n<li><p>1.<code>XSS</code>攻击的原理、分类、具体案例，前端如何防御</p>\n</li>\n<li><p>2.<code>CSRF</code>攻击的原理、具体案例，前端如何防御</p>\n</li>\n<li><p>3.<code>HTTP</code>劫持、页面劫持的原理、防御措施</p>\n<h3 id=\"业务相关\"><a href=\"#业务相关\" class=\"headerlink\" title=\"业务相关\"></a>业务相关</h3></li>\n<li><p>1.能理解所开发项目的整体业务形态、业务目标、业务架构，可以快速定位线上业务问题</p>\n</li>\n<li><p>2.能理解所开发项目整体的技术架构、能快读的根据新需求进行开发规划、能快速根据业务报警、线上日志等定位并解决线上技术问题</p>\n</li>\n<li><p>3.可以将自己的想法或新技术在业务中落地实践，尽量在团队中拥有一定的不可替代性</p>\n</li>\n</ul>\n","feature":true,"text":"前言感谢原作者提供这样一份优秀的自检清单，写这篇的文章的主要目的是按照清单上的知识检测自己还有哪些不足和提升，同时建立自己的知识体系原文章地址: 一名【合格】前端工程师的自检清单 一、JavaScript基础 前端工程师吃饭的家伙，深度、广度一样都不能差。 变量和类型 1.Jav...","link":"","photos":[],"count_time":{"symbolsCount":"7.1k","symbolsTime":"6 mins."},"categories":[{"name":"前端","slug":"前端","count":11,"path":"api/categories/前端.json"},{"name":"自检清单","slug":"前端/自检清单","count":11,"path":"api/categories/前端/自检清单.json"}],"tags":[{"name":"前端","slug":"前端","count":11,"path":"api/tags/前端.json"},{"name":"自检清单","slug":"自检清单","count":11,"path":"api/tags/自检清单.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%89%8D%E8%A8%80\"><span class=\"toc-text\">前言</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%80%E3%80%81JavaScript%E5%9F%BA%E7%A1%80\"><span class=\"toc-text\">一、JavaScript基础</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8F%98%E9%87%8F%E5%92%8C%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">变量和类型</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8E%9F%E5%9E%8B%E5%92%8C%E5%8E%9F%E5%9E%8B%E9%93%BE\"><span class=\"toc-text\">原型和原型链</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BD%9C%E7%94%A8%E5%9F%9F%E5%92%8C%E9%97%AD%E5%8C%85\"><span class=\"toc-text\">作用域和闭包</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%89%A7%E8%A1%8C%E6%9C%BA%E5%88%B6\"><span class=\"toc-text\">执行机制</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%AF%AD%E6%B3%95%E5%92%8CAPI\"><span class=\"toc-text\">语法和API</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BA%8C%E3%80%81HTML%E5%92%8CCSS\"><span class=\"toc-text\">二、HTML和CSS</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#HTML\"><span class=\"toc-text\">HTML</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#CSS\"><span class=\"toc-text\">CSS</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%89%8B%E5%86%99\"><span class=\"toc-text\">手写</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%89%E3%80%81%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80\"><span class=\"toc-text\">三、计算机基础</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86\"><span class=\"toc-text\">编译原理</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%BD%91%E7%BB%9C%E5%8D%8F%E8%AE%AE\"><span class=\"toc-text\">网络协议</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F\"><span class=\"toc-text\">设计模式</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%9B%9B%E3%80%81%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%92%8C%E7%AE%97%E6%B3%95\"><span class=\"toc-text\">四、数据结构和算法</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#JavaScript%E7%BC%96%E7%A0%81%E8%83%BD%E5%8A%9B\"><span class=\"toc-text\">JavaScript编码能力</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%89%8B%E5%8A%A8%E5%AE%9E%E7%8E%B0%E5%89%8D%E7%AB%AF%E8%BD%AE%E5%AD%90\"><span class=\"toc-text\">手动实现前端轮子</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84\"><span class=\"toc-text\">数据结构</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%AE%97%E6%B3%95\"><span class=\"toc-text\">算法</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BA%94%E3%80%81%E8%BF%90%E8%A1%8C%E7%8E%AF%E5%A2%83\"><span class=\"toc-text\">五、运行环境</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%B5%8F%E8%A7%88%E5%99%A8API\"><span class=\"toc-text\">浏览器API</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%B5%8F%E8%A7%88%E5%99%A8%E5%8E%9F%E7%90%86\"><span class=\"toc-text\">浏览器原理</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Node\"><span class=\"toc-text\">Node</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%85%AD%E3%80%81%E6%A1%86%E6%9E%B6%E5%92%8C%E7%B1%BB%E5%BA%93\"><span class=\"toc-text\">六、框架和类库</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#TypeScript\"><span class=\"toc-text\">TypeScript</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#React\"><span class=\"toc-text\">React</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Vue\"><span class=\"toc-text\">Vue</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%A4%9A%E7%AB%AF%E5%BC%80%E5%8F%91\"><span class=\"toc-text\">多端开发</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%95%B0%E6%8D%AE%E6%B5%81%E7%AE%A1%E7%90%86\"><span class=\"toc-text\">数据流管理</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AE%9E%E7%94%A8%E5%BA%93\"><span class=\"toc-text\">实用库</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%BC%80%E5%8F%91%E5%92%8C%E8%B0%83%E8%AF%95\"><span class=\"toc-text\">开发和调试</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%83%E3%80%81%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B\"><span class=\"toc-text\">七、前端工程</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%A1%B9%E7%9B%AE%E6%9E%84%E5%BB%BA\"><span class=\"toc-text\">项目构建</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#nginx\"><span class=\"toc-text\">nginx</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%BC%80%E5%8F%91%E6%8F%90%E9%80%9F\"><span class=\"toc-text\">开发提速</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6\"><span class=\"toc-text\">版本控制</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90\"><span class=\"toc-text\">持续集成</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%85%AB%E3%80%81%E9%A1%B9%E7%9B%AE%E5%92%8C%E4%B8%9A%E5%8A%A1\"><span class=\"toc-text\">八、项目和业务</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%90%8E%E7%AB%AF%E6%8A%80%E8%83%BD\"><span class=\"toc-text\">后端技能</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96\"><span class=\"toc-text\">性能优化</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%89%8D%E7%AB%AF%E5%AE%89%E5%85%A8\"><span class=\"toc-text\">前端安全</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%9A%E5%8A%A1%E7%9B%B8%E5%85%B3\"><span class=\"toc-text\">业务相关</span></a></li></ol></li></ol>","author":{"name":"手可摘星陈","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"人就是这样，喜欢什么，败给什么","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"JavaScript规定了几种语言类型","uid":"be69bcf460f3a988c3f4f8fd1e3998bb","slug":"js-specThe-langType","date":"2023-02-15T03:34:00.000Z","updated":"2023-02-16T01:23:04.480Z","comments":true,"path":"api/articles/js-specThe-langType.json","keywords":null,"cover":null,"text":"前言JavaScript是什么？这里引用百度百科的说法 JavaScript（简称“JS”） 是一种具有函数优先的轻量级，解释型或即时编译型的编程语言。虽然它是作为开发Web页面的脚本语言而出名，但是它也被用到了很多非浏览器环境中，JavaScript 基于原型编程、多范式的动态...","link":"","photos":[],"count_time":{"symbolsCount":"1.5k","symbolsTime":"1 mins."},"categories":[{"name":"前端","slug":"前端","count":11,"path":"api/categories/前端.json"},{"name":"自检清单","slug":"前端/自检清单","count":11,"path":"api/categories/前端/自检清单.json"},{"name":"JS","slug":"前端/自检清单/JS","count":10,"path":"api/categories/前端/自检清单/JS.json"}],"tags":[{"name":"前端","slug":"前端","count":11,"path":"api/tags/前端.json"},{"name":"自检清单","slug":"自检清单","count":11,"path":"api/tags/自检清单.json"},{"name":"JS","slug":"JS","count":10,"path":"api/tags/JS.json"}],"author":{"name":"手可摘星陈","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"人就是这样，喜欢什么，败给什么","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"nginx配置","uid":"4298a08c1e0e68f5aeb283438517f755","slug":"xu9t5l","date":"2021-12-19T09:08:00.000Z","updated":"2023-02-16T01:24:47.531Z","comments":true,"path":"api/articles/xu9t5l.json","keywords":null,"cover":null,"text":"服务器 nginx 配置一般目录地址： /etc/nginx nginx.conf 配置示例# For more information on configuration, see: # * Official English Documentation: http://nginx...","link":"","photos":[],"count_time":{"symbolsCount":"3.3k","symbolsTime":"3 mins."},"categories":[{"name":"nginx","slug":"nginx","count":1,"path":"api/categories/nginx.json"}],"tags":[{"name":"nginx","slug":"nginx","count":1,"path":"api/tags/nginx.json"}],"author":{"name":"手可摘星陈","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"人就是这样，喜欢什么，败给什么","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}