{"title":"一名【合格】前端工程师的自检清单【自检ing】","uid":"a9932dfc783681953ee77924badfcfab","slug":"self-check-list","date":"2023-02-14T02:15:00.000Z","updated":"2023-02-21T03:42:17.214Z","comments":true,"path":"api/articles/self-check-list.json","keywords":null,"cover":[],"content":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>感谢原作者提供这样一份优秀的自检清单，写这篇的文章的主要目的是按照清单上的知识检测自己还有哪些不足和提升，同时建立自己的知识体系<br>原文章地址: <a href=\"https://juejin.cn/post/6844903830887366670\">一名【合格】前端工程师的自检清单</a></p>\n<p><img src=\"https://gitee.com/CalebChen/pic-img/raw/master/blog-img/posts/Knowledge%20System.jpg\" alt=\"Knowledge System.jpg\"></p>\n<h2 id=\"一、JavaScript基础\"><a href=\"#一、JavaScript基础\" class=\"headerlink\" title=\"一、JavaScript基础\"></a>一、JavaScript基础</h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>前端工程师吃饭的家伙，深度、广度一样都不能差。</p></blockquote>\n<h3 id=\"变量和类型\"><a href=\"#变量和类型\" class=\"headerlink\" title=\"变量和类型\"></a>变量和类型</h3><ul>\n<li>1.<a href=\"https://kaleb.top/post/js-specThe-langType\"><code>JavaScript</code>规定了几种语言类型</a></li>\n<li>2.<a href=\"https://kaleb.top/post/js-data-structure\"><code>JavaScript</code>对象的底层数据结构是什么</a></li>\n<li>3.<a href=\"https://kaleb.top/post/symbol-devAndapp\"><code>Symbol</code>类型在实际开发中的应用、可手动实现一个简单的<code>Symbol</code></a></li>\n<li>4.<a href=\"https://kaleb.top/post/js-storageForm\"><code>JavaScript</code>中的变量在内存中的具体存储形式</a></li>\n<li>5.<a href=\"https://kaleb.top/post/built-object\">基本类型对应的内置对象，以及他们之间的装箱拆箱操作</a></li>\n<li>6.理解值类型和引用类型</li>\n<li>7.<a href=\"https://kaleb.top/post/null-undefined-diff\"><code>null</code>和<code>undefined</code>的区别</a></li>\n<li>8.<a href=\"https://kaleb.top/post/judgment-type-method\">至少可以说出三种判断<code>JavaScript</code>数据类型的方式，以及他们的优缺点，如何准确的判断数组类型</a></li>\n<li>9.<a href=\"https://kaleb.top/post/implicit-type\">可能发生隐式类型转换的场景以及转换原则，应如何避免或巧妙应用</a></li>\n<li>10.<a href=\"https://kaleb.top/post/loss-of-precision\">出现小数精度丢失的原因，<code>JavaScript</code>可以存储的最大数字、最大安全数字，<code>JavaScript</code>处理大数字的方法、避免精度丢失的方法</a></li>\n</ul>\n<h3 id=\"原型和原型链\"><a href=\"#原型和原型链\" class=\"headerlink\" title=\"原型和原型链\"></a>原型和原型链</h3><ul>\n<li>1.<a href=\"https://kaleb.top/post/prototype-rules\">理解原型设计模式以及<code>JavaScript</code>中的原型规则</a></li>\n<li>2.<code>instanceof</code>的底层实现原理，手动实现一个<code>instanceof</code></li>\n<li>4.实现继承的几种方式以及他们的优缺点</li>\n<li>5.至少说出一种开源项目(如<code>Node</code>)中应用原型继承的案例</li>\n<li>6.可以描述<code>new</code>一个对象的详细过程，手动实现一个<code>new</code>操作符</li>\n<li>7.理解<code>es6 class</code>构造以及继承的底层实现原理</li>\n</ul>\n<h2 id=\"六、框架和类库\"><a href=\"#六、框架和类库\" class=\"headerlink\" title=\"六、框架和类库\"></a>六、框架和类库</h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>轮子层出不穷，从原理上理解才是正道</p></blockquote>\n<h3 id=\"Vue\"><a href=\"#Vue\" class=\"headerlink\" title=\"Vue\"></a>Vue</h3><ul>\n<li>1.<a href=\"https://kaleb.top/post/vue-api\">熟练使用<code>Vue</code>的<code>API</code>、生命周期、钩子函数</a></li>\n<li>2.<a href=\"https://kaleb.top/post/mvvm-design-concept\"><code>MVVM</code>框架设计理念</a></li>\n<li>3.<code>Vue</code>双向绑定实现原理、<code>Diff</code>算法的内部实现</li>\n<li>4.<code>Vue</code>的事件机制</li>\n<li>5.从<code>template</code>转换成真实<code>DOM</code>的实现机制</li>\n</ul>\n","feature":true,"text":"前言感谢原作者提供这样一份优秀的自检清单，写这篇的文章的主要目的是按照清单上的知识检测自己还有哪些不足和提升，同时建立自己的知识体系原文章地址: 一名【合格】前端工程师的自检清单 一、JavaScript基础 前端工程师吃饭的家伙，深度、广度一样都不能差。 变量和类型 1.Jav...","link":"","photos":[],"count_time":{"symbolsCount":794,"symbolsTime":"1 mins."},"categories":[{"name":"前端","slug":"前端","count":13,"path":"api/categories/前端.json"},{"name":"自检清单","slug":"前端/自检清单","count":13,"path":"api/categories/前端/自检清单.json"}],"tags":[{"name":"前端","slug":"前端","count":13,"path":"api/tags/前端.json"},{"name":"自检清单","slug":"自检清单","count":13,"path":"api/tags/自检清单.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%89%8D%E8%A8%80\"><span class=\"toc-text\">前言</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%80%E3%80%81JavaScript%E5%9F%BA%E7%A1%80\"><span class=\"toc-text\">一、JavaScript基础</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8F%98%E9%87%8F%E5%92%8C%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">变量和类型</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8E%9F%E5%9E%8B%E5%92%8C%E5%8E%9F%E5%9E%8B%E9%93%BE\"><span class=\"toc-text\">原型和原型链</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%85%AD%E3%80%81%E6%A1%86%E6%9E%B6%E5%92%8C%E7%B1%BB%E5%BA%93\"><span class=\"toc-text\">六、框架和类库</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Vue\"><span class=\"toc-text\">Vue</span></a></li></ol></li></ol>","author":{"name":"手可摘星陈","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"人就是这样，喜欢什么，败给什么","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"MVVM框架设计理念","uid":"72e4b58e2d3b566d6790462e8f45cacc","slug":"mvvm-design-concept","date":"2023-02-21T03:09:01.000Z","updated":"2023-02-21T03:09:53.794Z","comments":true,"path":"api/articles/mvvm-design-concept.json","keywords":null,"cover":[],"text":"前言目前比较流行的几个框架，例如vue.js、react.js、avalon、angular.js等，给自己的定位都是属于mvvm类型框架，那么什么是mvvm框架呢？mvvm是什么意思呢？ 聊到mvvm就要提一下java语言中的mvc模式，所以我们想来看下什么是mvc。 MVC概...","link":"","photos":[],"count_time":{"symbolsCount":676,"symbolsTime":"1 mins."},"categories":[{"name":"前端","slug":"前端","count":13,"path":"api/categories/前端.json"},{"name":"自检清单","slug":"前端/自检清单","count":13,"path":"api/categories/前端/自检清单.json"},{"name":"Vue","slug":"前端/自检清单/Vue","count":2,"path":"api/categories/前端/自检清单/Vue.json"}],"tags":[{"name":"前端","slug":"前端","count":13,"path":"api/tags/前端.json"},{"name":"自检清单","slug":"自检清单","count":13,"path":"api/tags/自检清单.json"},{"name":"Vue","slug":"Vue","count":2,"path":"api/tags/Vue.json"}],"author":{"name":"手可摘星陈","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"人就是这样，喜欢什么，败给什么","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"理解原型设计模式以及JavaScript中的原型规则","uid":"9c0e46ac234b95fe1f1741ca7e4e7d0c","slug":"prototype-rules","date":"2023-02-20T08:10:45.000Z","updated":"2023-02-20T08:16:05.959Z","comments":true,"path":"api/articles/prototype-rules.json","keywords":null,"cover":[],"text":"原型规则原型规则所有的引用类型（数组、对象、函数），都具有对象特征，即可自由扩展属性； var arr = []; arr.a =1; 所有的引用类型都有对象的特性，即可自由扩展 所有的引用类型都有一个_proto_属性（隐式原型），属性的值是一个普通对象 所有函数，都具有一个p...","link":"","photos":[],"count_time":{"symbolsCount":"2.5k","symbolsTime":"2 mins."},"categories":[{"name":"前端","slug":"前端","count":13,"path":"api/categories/前端.json"},{"name":"自检清单","slug":"前端/自检清单","count":13,"path":"api/categories/前端/自检清单.json"},{"name":"JS","slug":"前端/自检清单/JS","count":10,"path":"api/categories/前端/自检清单/JS.json"}],"tags":[{"name":"前端","slug":"前端","count":13,"path":"api/tags/前端.json"},{"name":"自检清单","slug":"自检清单","count":13,"path":"api/tags/自检清单.json"},{"name":"JS","slug":"JS","count":10,"path":"api/tags/JS.json"}],"author":{"name":"手可摘星陈","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"人就是这样，喜欢什么，败给什么","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}