{"title":"Vue的API、生命周期、钩子函数","uid":"3d0e05ad397f90d89d1de00301c0be95","slug":"vue-api","date":"2023-02-21T03:41:36.000Z","updated":"2023-02-21T03:41:44.132Z","comments":true,"path":"api/articles/vue-api.json","keywords":null,"cover":[],"content":"<h2 id=\"API\"><a href=\"#API\" class=\"headerlink\" title=\"API\"></a>API</h2><p>具体详情进：<a href=\"https://cn.vuejs.org/api/\">Vue API</a></p>\n<p>常用的如：</p>\n<pre class=\"line-numbers language-Js\" data-language=\"Js\"><code class=\"language-Js\">&#96;&#x2F;&#x2F; console.log(vm.$root);&#96;\n&#96;vm.$root&#96;&#96;&#x2F;&#x2F;实例对象&#96;\n\n&#96;vm.$el&#96;&#96;&#x2F;&#x2F;根元素（真实的DOM元素）&#96;\n&#96;&#x2F;&#x2F; console.log(vm.$el);&#96;\n\n&#96;vm.$el.innerHTML&#96;&#96;&#x2F;&#x2F;得到根元素（真实的DOM元素）中的内容&#96;\n&#96;&#x2F;&#x2F; console.log(vm.$el.innerHTML);&#96;\n\n&#96;vm.$data&#96;&#96;&#x2F;&#x2F;实例下的data对象&#96;\n&#96;&#x2F;&#x2F; console.log(vm.$data);&#96;\n\n&#96;vm.$options&#96;&#96;&#x2F;&#x2F;实例下的挂载项&#96;\n&#96;&#x2F;&#x2F; console.log(vm.$options);&#96;\n\n&#96;vm.$props&#96;&#96;&#x2F;&#x2F;组件之间通信的数据&#96;\n&#96;&#x2F;&#x2F; console.log(vm.$props);&#96;\n\n&#96;vm.$parent&#96;&#96;&#x2F;&#x2F;在组件中，指父元素&#96;\n&#96;&#x2F;&#x2F; console.log(vm.$parent);&#96;\n\n&#96;vm.$children&#96;&#96;&#x2F;&#x2F;在组件中，指子代元素&#96;\n&#96;&#x2F;&#x2F; console.log(vm.$children);&#96;\n\n&#96;vm.$attrs&#96;&#96;&#x2F;&#x2F;用来获取父组件传递过来的所有属性&#96;\n&#96;&#x2F;&#x2F; console.log(vm.$attrs);&#96;\n\n&#96;vm.$listeners&#96;&#96;&#x2F;&#x2F;用来获取父组件传递过来的所有方法&#96;\n&#96;&#x2F;&#x2F; console.log(vm.$listeners);&#96;\n\n&#96;vm.$slots&#96;&#96;&#x2F;&#x2F;组件中的插槽&#96;\n&#96;&#x2F;&#x2F; console.log(vm.$slots);&#96;\n\n&#96;vm.$scopedSlots&#96;&#96;&#x2F;&#x2F;用来访问作用域插槽&#96;\n&#96;&#x2F;&#x2F; console.log(vm.$scopedSlots);&#96;\n\n&#96;vm.$refs&#96;&#96;&#x2F;&#x2F;用来定位DOM元素（使用ref进行追踪）&#96;\n&#96;&#x2F;&#x2F; console.log(vm.$refs);&#96;\n\n&#96;vm.$watch&#96;&#96;&#x2F;&#x2F;用于监听数据（在vue文件中使用后会自动销毁）&#96;\n&#96;&#x2F;&#x2F; console.log(vm.$watch);&#96;\n\n&#96;vm.$emit&#96;&#96;&#x2F;&#x2F;用于派发事件（常用于数据通信）&#96;\n&#96;&#x2F;&#x2F; console.log(vm.$emit);&#96;\n\n&#96;vm.$on&#96;&#96;&#x2F;&#x2F;用于监听事件的派发&#96;\n&#96;&#x2F;&#x2F; console.log(vm.$on);&#96;\n\n&#96;vm.$once&#96;&#96;&#x2F;&#x2F;只监听事件一次（之后不监听）&#96;\n&#96;&#x2F;&#x2F; console.log(vm.$once);&#96;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"生命周期\"><a href=\"#生命周期\" class=\"headerlink\" title=\"生命周期\"></a>生命周期</h2><table>\n<thead>\n<tr>\n<th>生命周期</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>beforeCreate</td>\n<td>组件实例被创建之初</td>\n</tr>\n<tr>\n<td>created</td>\n<td>组件实例已经完全创建</td>\n</tr>\n<tr>\n<td>beforeMount</td>\n<td>组件挂载之前</td>\n</tr>\n<tr>\n<td>mounted</td>\n<td>组件挂载到实例上去之后</td>\n</tr>\n<tr>\n<td>beforeUpdate</td>\n<td>组件数据发生变化，更新之前</td>\n</tr>\n<tr>\n<td>updated</td>\n<td>组件数据更新之后</td>\n</tr>\n<tr>\n<td>beforeDestroy</td>\n<td>组件实例销毁之前</td>\n</tr>\n<tr>\n<td>destroyed</td>\n<td>组件实例销毁之后</td>\n</tr>\n<tr>\n<td>activated</td>\n<td>keep-alive 缓存的组件激活时</td>\n</tr>\n<tr>\n<td>deactivated</td>\n<td>keep-alive 缓存的组件停用时调用</td>\n</tr>\n<tr>\n<td>errorCaptured</td>\n<td>捕获一个来自子孙组件的错误时被调用</td>\n</tr>\n</tbody></table>\n<p>Vue生命周期流程图</p>\n<p><img src=\"https://static.vue-js.com/44114780-3aca-11eb-85f6-6fac77c0c9b3.png\" alt=\"流程图\"></p>\n<h2 id=\"钩子函数\"><a href=\"#钩子函数\" class=\"headerlink\" title=\"钩子函数\"></a>钩子函数</h2><p>总共有11个</p>\n<ul>\n<li><p>beforeCreate created[可以获取数据及方法]</p>\n</li>\n<li><p>beforeMount mounted[可以获取到真实的DOM]</p>\n</li>\n<li><p>beforeUpdate updated[数据更新执行]</p>\n</li>\n<li><p>beforeDestroy destroyed[销毁vue实例，不再具有双向数据绑定的特点]</p>\n</li>\n<li><p>当keep-alive 缓存组件才会有的生命周期的钩子函数</p>\n<ul>\n<li>activated deactivated</li>\n</ul>\n</li>\n<li><p>errorCaptured 当子孙组件出错时，会调用这个钩子函数</p>\n</li>\n</ul>\n<p><strong>ps：文末附上汇总文章链接<a href=\"https://kaleb.top/post/self-check-list\">《一名【合格】前端工程师的自检清单【自检ing】》</a></strong></p>\n","feature":true,"text":"API具体详情进：Vue API 常用的如： &#96;&#x2F;&#x2F; console.log(vm.$root);&#96; &#96;vm.$root&#96;&#96;&#x2F;&#x2F;实例对象&#96; &#96;vm.$el&#96;&#96;&#x2F...","link":"","photos":[],"count_time":{"symbolsCount":"2.4k","symbolsTime":"2 mins."},"categories":[{"name":"前端","slug":"前端","count":13,"path":"api/categories/前端.json"},{"name":"自检清单","slug":"前端/自检清单","count":13,"path":"api/categories/前端/自检清单.json"},{"name":"Vue","slug":"前端/自检清单/Vue","count":2,"path":"api/categories/前端/自检清单/Vue.json"}],"tags":[{"name":"前端","slug":"前端","count":13,"path":"api/tags/前端.json"},{"name":"自检清单","slug":"自检清单","count":13,"path":"api/tags/自检清单.json"},{"name":"Vue","slug":"Vue","count":2,"path":"api/tags/Vue.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#API\"><span class=\"toc-text\">API</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F\"><span class=\"toc-text\">生命周期</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%92%A9%E5%AD%90%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">钩子函数</span></a></li></ol>","author":{"name":"手可摘星陈","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"人就是这样，喜欢什么，败给什么","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{},"next_post":{"title":"MVVM框架设计理念","uid":"72e4b58e2d3b566d6790462e8f45cacc","slug":"mvvm-design-concept","date":"2023-02-21T03:09:01.000Z","updated":"2023-02-21T03:09:53.794Z","comments":true,"path":"api/articles/mvvm-design-concept.json","keywords":null,"cover":[],"text":"前言目前比较流行的几个框架，例如vue.js、react.js、avalon、angular.js等，给自己的定位都是属于mvvm类型框架，那么什么是mvvm框架呢？mvvm是什么意思呢？ 聊到mvvm就要提一下java语言中的mvc模式，所以我们想来看下什么是mvc。 MVC概...","link":"","photos":[],"count_time":{"symbolsCount":676,"symbolsTime":"1 mins."},"categories":[{"name":"前端","slug":"前端","count":13,"path":"api/categories/前端.json"},{"name":"自检清单","slug":"前端/自检清单","count":13,"path":"api/categories/前端/自检清单.json"},{"name":"Vue","slug":"前端/自检清单/Vue","count":2,"path":"api/categories/前端/自检清单/Vue.json"}],"tags":[{"name":"前端","slug":"前端","count":13,"path":"api/tags/前端.json"},{"name":"自检清单","slug":"自检清单","count":13,"path":"api/tags/自检清单.json"},{"name":"Vue","slug":"Vue","count":2,"path":"api/tags/Vue.json"}],"author":{"name":"手可摘星陈","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"人就是这样，喜欢什么，败给什么","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}}