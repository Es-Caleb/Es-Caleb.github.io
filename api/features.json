[{"title":"理解原型设计模式以及JavaScript中的原型规则","uid":"9c0e46ac234b95fe1f1741ca7e4e7d0c","slug":"prototype-rules","date":"2023-02-20T08:10:45.000Z","updated":"2023-02-20T08:11:57.284Z","comments":true,"path":"api/articles/prototype-rules.json","cover":[],"text":"原型规则原型规则所有的引用类型（数组、对象、函数），都具有对象特征，即可自由扩展属性； var arr = []; arr.a =1; 所有的引用类型都有对象的特性，即可自由扩展 所有的引用类型都有一个_proto_属性（隐式原型），属性的值是一个普通对象 所有函数，都具有一个p...","link":"","photos":[],"count_time":{"symbolsCount":"2.5k","symbolsTime":"2 mins."},"categories":[{"name":"前端","slug":"前端","count":11,"path":"api/categories/前端.json"},{"name":"自检清单","slug":"前端/自检清单","count":11,"path":"api/categories/前端/自检清单.json"},{"name":"JS","slug":"前端/自检清单/JS","count":10,"path":"api/categories/前端/自检清单/JS.json"}],"tags":[{"name":"前端","slug":"前端","count":11,"path":"api/tags/前端.json"},{"name":"自检清单","slug":"自检清单","count":11,"path":"api/tags/自检清单.json"},{"name":"JS","slug":"JS","count":10,"path":"api/tags/JS.json"}],"author":{"name":"手可摘星陈","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"人就是这样，喜欢什么，败给什么","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},{"title":"出现小数精度丢失的原因，JavaScript可以存储的最大数字、最大安全数字，JavaScript处理大数字的方法、避免精度丢失的方法","uid":"97ef40e42114f03cdf27cd3432d76d80","slug":"loss-of-precision","date":"2023-02-17T09:17:28.000Z","updated":"2023-02-20T08:09:12.425Z","comments":true,"path":"api/articles/loss-of-precision.json","cover":null,"text":"一个经典的面试题 0.1 + 0.2 === 0.3 // false 精度丢失原因计算机是通过二进制的方式存储数据的，所以计算机计算0.1+0.2的时候，实际上是计算的两个数的二进制的和。 0.1的二进制是0.0001100110011001100...（1100循环），0.2...","link":"","photos":[],"count_time":{"symbolsCount":"2.2k","symbolsTime":"2 mins."},"categories":[{"name":"前端","slug":"前端","count":11,"path":"api/categories/前端.json"},{"name":"自检清单","slug":"前端/自检清单","count":11,"path":"api/categories/前端/自检清单.json"},{"name":"JS","slug":"前端/自检清单/JS","count":10,"path":"api/categories/前端/自检清单/JS.json"}],"tags":[{"name":"前端","slug":"前端","count":11,"path":"api/tags/前端.json"},{"name":"自检清单","slug":"自检清单","count":11,"path":"api/tags/自检清单.json"},{"name":"JS","slug":"JS","count":10,"path":"api/tags/JS.json"}],"author":{"name":"手可摘星陈","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"人就是这样，喜欢什么，败给什么","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},{"title":"可能发生隐式类型转换的场景以及转换原则，应如何避免或巧妙应用","uid":"8df75aa3038e84f242f016eb70dbbb6a","slug":"implicit-type","date":"2023-02-17T03:46:34.000Z","updated":"2023-02-20T08:07:23.475Z","comments":true,"path":"api/articles/implicit-type.json","cover":null,"text":"数值转换有三个函数可以将非数值转换为数值：Number()、parseInt()、parseFloat()。Number()是转型函数，可用于任何数据类型。后两个函数主要用于将字符串转换为数值。 隐式类型转换 涉及类型转换最多的两个运算符是+和==。+可以是字符串相加，也可以是数...","link":"","photos":[],"count_time":{"symbolsCount":"2.5k","symbolsTime":"2 mins."},"categories":[{"name":"前端","slug":"前端","count":11,"path":"api/categories/前端.json"},{"name":"自检清单","slug":"前端/自检清单","count":11,"path":"api/categories/前端/自检清单.json"},{"name":"JS","slug":"前端/自检清单/JS","count":10,"path":"api/categories/前端/自检清单/JS.json"}],"tags":[{"name":"前端","slug":"前端","count":11,"path":"api/tags/前端.json"},{"name":"自检清单","slug":"自检清单","count":11,"path":"api/tags/自检清单.json"},{"name":"JS","slug":"JS","count":10,"path":"api/tags/JS.json"}],"author":{"name":"手可摘星陈","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"人就是这样，喜欢什么，败给什么","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}]